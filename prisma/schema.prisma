generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Quiz {
  id          String @id @default(cuid())
  title       String @db.Text
  description String @db.Text
  imageUrl    String
  slug        String @unique

  questions   Question[]
  submissions Submission[]
}

model Question {
  id          String @id @default(cuid())
  quizId      String
  description String @db.Text
  score       Int

  answers Answer[]
  quiz    Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)

  submissionQuestionAnswers SubmissionQuestionAnswer[]
}

model Answer {
  id            String  @id @default(cuid())
  questionId    String
  description   String  @db.Text
  isRightAnswer Boolean @default(false)

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  submissionQuestionAnswers SubmissionQuestionAnswer[]
}

model Submission {
  id        String    @id @default(cuid())
  userId    String?
  sessionId String?
  quizId    String
  result    Int?
  gaveUpAt  DateTime?
  createdAt DateTime  @default(now())

  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)

  questionAnswers SubmissionQuestionAnswer[]
}

model SubmissionQuestionAnswer {
  id           String    @id @default(cuid())
  submissionId String
  questionId   String
  answerId     String?
  answered     Boolean   @default(false)
  answeredAt   DateTime?
  createdAt    DateTime  @default(now())

  submission Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  question   Question   @relation(fields: [questionId], references: [id])
  answer     Answer?    @relation(fields: [answerId], references: [id])
}

model User {
  id    String @id @default(cuid())
  email String @unique
}
